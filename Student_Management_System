import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

class Student {
    private String name;
    private int rollNumber;
    private String grade;
    // Add any other relevant attributes

    public Student(String name, int rollNumber, String grade) {
        this.name = name;
        this.rollNumber = rollNumber;
        this.grade = grade;
    }

    // Getter and setter methods for attributes

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getRollNumber() {
        return rollNumber;
    }

    public void setRollNumber(int rollNumber) {
        this.rollNumber = rollNumber;
    }

    public String getGrade() {
        return grade;
    }

    public void setGrade(String grade) {
        this.grade = grade;
    }
}

class StudentManagementSystem {
    private List<Student> students;

    public StudentManagementSystem() {
        students = new ArrayList<>();
    }

    public void addStudent(Student student) {
        students.add(student);
    }

    public void removeStudent(Student student) {
        students.remove(student);
    }

    public Student searchStudent(int rollNumber) {
        for (Student student : students) {
            if (student.getRollNumber() == rollNumber) {
                return student;
            }
        }
        return null;
    }

    public void displayAllStudents() {
        for (Student student : students) {
            System.out.println("Name: " + student.getName());
            System.out.println("Roll Number: " + student.getRollNumber());
            System.out.println("Grade: " + student.getGrade());
            System.out.println();
        }
    }
}
public class StudentManagementSystemApp {

	private static StudentManagementSystem system = new StudentManagementSystem();
    private static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        boolean exit = false;
        while (!exit) {
            printOptions();
            int choice = getUserChoice();
            switch (choice) {
                case 1:
                    addStudent();
                    break;
                case 2:
                    removeStudent();
                    break;
                case 3:
                    searchStudent();
                    break;
                case 4:
                    displayAllStudents();
                    break;
                case 5:
                    exit = true;
                    break;
                default:
                    System.out.println("Invalid choice. Please try again.");
                    break;
            }
        }
        scanner.close();
    }

    private static void printOptions() {
        System.out.println("Student Management System");
        System.out.println("1. Add a student");
        System.out.println("2. Remove a student");
        System.out.println("3. Search for a student");
        System.out.println("4. Display all students");
        System.out.println("5. Exit");
        System.out.print("Enter your choice: ");
    }

    private static int getUserChoice() {
        int choice = scanner.nextInt();
        scanner.nextLine(); // Consume newline character
        return choice;
    }

    private static void addStudent() {
        System.out.println("Enter student details:");
        System.out.print("Name: ");
        String name = scanner.nextLine();
        int rollNumber = 0;
        while (rollNumber <= 0) {
            System.out.print("Roll Number: ");
            try {
                rollNumber = Integer.parseInt(scanner.nextLine());
                if (rollNumber <= 0) {
                    System.out.println("Roll Number must be a positive integer.");
                }
            } catch (NumberFormatException e) {
                System.out.println("Invalid Roll Number. Please enter a valid integer value.");
            }
        }
        System.out.print("Grade: ");
        String grade = scanner.nextLine();

        Student student = new Student(name, rollNumber, grade);
        system.addStudent(student);
        System.out.println("Student added successfully.");
        System.out.println();
    }

    private static void removeStudent() {
        System.out.print("Enter the Roll Number of the student to remove: ");
        int rollNumber = scanner.nextInt();
        scanner.nextLine(); // Consume newline character

        Student student = system.searchStudent(rollNumber);
        if (student != null) {
            system.removeStudent(student);
            System.out.println("Student removed successfully.");
        } else {
            System.out.println("Student not found.");
        }
        System.out.println();
    }

    private static void searchStudent() {
        System.out.print("Enter the Roll Number of the student to search: ");
        int rollNumber = scanner.nextInt();
        scanner.nextLine(); // Consume newline character

        Student student = system.searchStudent(rollNumber);
        if (student != null) {
            System.out.println("Student details:");
            System.out.println("Name: " + student.getName());
            System.out.println("Roll Number: " + student.getRollNumber());
            System.out.println("Grade: " + student.getGrade());
        } else {
            System.out.println("Student not found.");
        }
        System.out.println();
    }

    private static void displayAllStudents() {
        System.out.println("All students:");
        system.displayAllStudents();
        System.out.println();
    }
}

